Index: app/src/main/java/com/bku/scrumsoftware/Adapter/MeetingAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bku.scrumsoftware.Adapter;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.AdapterView;\nimport android.widget.ArrayAdapter;\nimport android.widget.BaseAdapter;\nimport android.widget.Spinner;\nimport android.widget.TextView;\n\nimport com.bku.scrumsoftware.R;\nimport com.bku.scrumsoftware.onListener.OnClickItemListener;\n\npublic class MeetingAdapter extends BaseAdapter {\n    public static final int NUM_ELEMENTS = 12;\n    public static final int NUM_VIEW_TYPE = 2;\n    public static final int TYPE_TITLE = 0;\n    public static final int TYPE_SPINNER = 1;\n\n    private Context mContext;\n\n    OnClickItemListener onClick;\n\n    public MeetingAdapter(Context context, OnClickItemListener onClick) {\n        super();\n        this.mContext = context;\n        this.onClick = onClick;\n    }\n\n    @Override\n    public int getCount() {\n        return NUM_ELEMENTS;\n    }\n\n    @Override\n    public Object getItem(int position) {\n        return null;\n    }\n\n    @Override\n    public long getItemId(int position) {\n        return 0;\n    }\n\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        int type = getItemViewType(position);\n\n        if (type == TYPE_TITLE) {\n            View v = LayoutInflater.from(mContext).inflate(R.layout.meeting_title, parent, false);\n            TextView txtTitle = v.findViewById(R.id.txtWeek);\n            if (position == 0) {\n                txtTitle.setText(\"Week 1\");\n            } else {\n                txtTitle.setText(\"Week 2\");\n            }\n\n            return v;\n        }\n\n        View v = LayoutInflater.from(mContext).inflate(R.layout.day_spinner, parent, false);\n\n        final Spinner spinner = (Spinner) v;\n\n        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n            @Override\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n                switch (spinner.getSelectedItem().toString()) {\n                    case \"Planning Topic 1\":\n                        onClick.onClickItem(mContext.getString(R.string.mon1_col2_row1));\n                        break;\n                    case \"Planning Topic 2\":\n                        onClick.onClickItem(mContext.getString(R.string.mon1_col3_row1));\n                        break;\n                    case \"Sprint Forecast\":\n                        onClick.onClickItem(mContext.getString(R.string.mon1_col4_row1));\n                        break;\n                    case \"Sprint Goal Communication\":\n                        onClick.onClickItem(mContext.getString(R.string.mon1_col5_row1));\n                        break;\n                    case \"Start Workshop\":\n                        onClick.onClickItem(mContext.getString(R.string.tue1_col2_row1));\n                        break;\n                    case \"Product Backlog refinement\":\n                        onClick.onClickItem(mContext.getString(R.string.mon2_col2_row1));\n                        break;\n                    case \"Backlog ordering\":\n                        onClick.onClickItem(mContext.getString(R.string.thu2_col2_row1));\n                        break;\n                    case \"Sprint Retrospective\":\n                        onClick.onClickItem(mContext.getString(R.string.fri2_col3_row1));\n                        break;\n                    case \"Sprint Review\":\n                        onClick.onClickItem(mContext.getString(R.string.fri2_col2_row1));\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            @Override\n            public void onNothingSelected(AdapterView<?> parent) {\n\n            }\n        });\n\n        switch (position) {\n            case 1:\n                String data1[] = {\"Monday\", \"Planning Topic 1\",\"Planning Topic 2\",\"Sprint Forecast\",\"Sprint Goal Communication\"};\n                ArrayAdapter<String> spinnerArrayAdapter1 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data1);\n                spinnerArrayAdapter1.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter1);\n                /*spinner.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n                    @Override\n                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n                        switch (position){\n                            case 0:\n                                onClick.onClickItem(mContext.getString(R.string.mon1_col2_row1));\n                                break;\n                            case 1:\n                                onClick.onClickItem(mContext.getString(R.string.mon1_col3_row1));\n                                break;\n                            case 2:\n                                onClick.onClickItem(mContext.getString(R.string.mon1_col4_row1));\n                                break;\n                            case 3:\n                                onClick.onClickItem(mContext.getString(R.string.mon1_col5_row1));\n                                break;\n                        }\n                    }\n                });*/\n                return v;\n            case 2:\n                String data2[] = {\"Tuesday\", \"Start Workshop\"};\n                ArrayAdapter<String> spinnerArrayAdapter2 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data2);\n                spinnerArrayAdapter2.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter2);\n                return v;\n            case 3:\n                String data3[] = {\"Wednesday\", \"Start Workshop\"};\n                ArrayAdapter<String> spinnerArrayAdapter3 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data3);\n                spinnerArrayAdapter3.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter3);\n                return v;\n            case 4:\n                String data4[] = {\"Thursday\", \"Start Workshop\"};\n                ArrayAdapter<String> spinnerArrayAdapter4 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data4);\n                spinnerArrayAdapter4.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter4);\n                return v;\n            case 5:\n                String data5[] = {\"Friday\", \"Start Workshop\"};\n                ArrayAdapter<String> spinnerArrayAdapter5 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data5);\n                spinnerArrayAdapter5.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter5);\n                return v;\n            case 7:\n                String data6[] = {\"Monday\", \"Product Backlog refinement\"};\n                ArrayAdapter<String> spinnerArrayAdapter6 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data6);\n                spinnerArrayAdapter6.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter6);\n                return v;\n            case 8:\n                String data7[] = {\"Tuesday\", \"Product Backlog refinement\"};\n                ArrayAdapter<String> spinnerArrayAdapter7 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data7);\n                spinnerArrayAdapter7.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter7);\n                return v;\n            case 9:\n                String data8[] = {\"Wednesday\", \"Product Backlog refinement\"};\n                ArrayAdapter<String> spinnerArrayAdapter8 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data8);\n                spinnerArrayAdapter8.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter8);\n                return v;\n            case 10:\n                String data9[] = {\"Thursday\", \"Backlog ordering\"};\n                ArrayAdapter<String> spinnerArrayAdapter9 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data9);\n                spinnerArrayAdapter9.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter9);\n                return v;\n            case 11:\n                String data10[] = {\"Friday\", \"Sprint Retrospective\", \"Sprint Review\"};\n                ArrayAdapter<String> spinnerArrayAdapter10 = new ArrayAdapter<>\n                        (mContext, android.R.layout.simple_spinner_item, data10);\n                spinnerArrayAdapter10.setDropDownViewResource(android.R.layout\n                        .simple_spinner_dropdown_item);\n                spinner.setAdapter(spinnerArrayAdapter10);\n                return v;\n        }\n\n        return v;\n    }\n\n    @Override\n    public int getItemViewType(int position) {\n        if (position == 0 || position == 6) {\n            return TYPE_TITLE;\n        }\n\n        return TYPE_SPINNER;\n    }\n\n    @Override\n    public int getViewTypeCount() {\n        return NUM_VIEW_TYPE;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bku/scrumsoftware/Adapter/MeetingAdapter.java	(revision 6aa6a96612a8a824a9f2832bc21656aa5a4bbdb6)
+++ app/src/main/java/com/bku/scrumsoftware/Adapter/MeetingAdapter.java	(date 1538278981307)
@@ -71,6 +71,7 @@
                 switch (spinner.getSelectedItem().toString()) {
                     case "Planning Topic 1":
                         onClick.onClickItem(mContext.getString(R.string.mon1_col2_row1));
+
                         break;
                     case "Planning Topic 2":
                         onClick.onClickItem(mContext.getString(R.string.mon1_col3_row1));
Index: app/src/main/java/com/bku/scrumsoftware/Fragment/PopUpDetailFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bku.scrumsoftware.Fragment;\n\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.support.annotation.Nullable;\nimport android.support.v4.app.Fragment;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport com.bku.scrumsoftware.R;\nimport com.bku.scrumsoftware.onListener.OnClickItemListener;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\n\n/**\n * Created by Welcome on 9/22/2018.\n */\n\npublic class PopUpDetailFragment extends Fragment implements OnClickItemListener {\n\n\n    @BindView(R.id.backArrow)\n    ImageView backArrow;\n\n    @BindView(R.id.Row1Column1)\n    TextView row1col1;\n    @BindView(R.id.Row1Column2)\n    TextView row1col2;\n    @BindView(R.id.Row2Column1)\n    TextView row2col1;\n    @BindView(R.id.Row2Column2)\n    TextView row2col2;\n    @BindView(R.id.Row3Column1)\n    TextView row3col1;\n    @BindView(R.id.Row3Column2)\n    TextView row3col2;\n    @BindView(R.id.Row4Column1)\n    TextView row4col1;\n    @BindView(R.id.Row4Column2)\n    TextView row4col2;\n    @BindView(R.id.Row5Column1)\n    TextView row5col1;\n    @BindView(R.id.Row5Column2)\n    TextView row5col2;\n    @BindView(R.id.Row6Column1)\n    TextView row6col1;\n    @BindView(R.id.Row6Column2)\n    TextView row6col2;\n    @BindView(R.id.Row7Column1)\n    TextView row7col1;\n    @BindView(R.id.Row7Column2)\n    TextView row7col2;\n    @BindView(R.id.Row8Column1)\n    TextView row8col1;\n    @BindView(R.id.Row8Column2)\n    TextView row8col2;\n\n\n    // TODO: Rename parameter arguments, choose names that match\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n    private static final String Type_Day = \"typeday\";\n\n\n    // TODO: Rename and change types of parameters\n    private String typeSprint;\n\n\n    public PopUpDetailFragment() {\n        // Required empty public constructor\n    }\n\n    /**\n     * Use this factory method to create a new instance of\n     * this fragment using the provided parameters.\n     *\n     * @param param1 Parameter 1.\n     * @return A new instance of fragment MeetingDetailFragment.\n     */\n    // TODO: Rename and change types and number of parameters\n    public static PopUpDetailFragment newInstance(String param1) {\n        PopUpDetailFragment fragment = new PopUpDetailFragment();\n        Bundle args = new Bundle();\n        args.putString(Type_Day, param1);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            typeSprint = getArguments().getString(Type_Day);\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        View view = inflater.inflate(R.layout.layout_detail, container, false);\n        ButterKnife.bind(this, view);\n        return view;\n    }\n\n    // TODO: Rename method, update argument and hook method into UI event\n\n\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        initRow1();\n        switch (typeSprint) {\n            case \"mon1\":\n                break;\n            default:\n                break;\n        }\n    }\n\n    private void initRow1() {\n        row1col1.setText(getString(R.string.row1col1));\n        row2col1.setText(getString(R.string.row2col1));\n        row3col1.setText(getString(R.string.row3col1));\n        row4col1.setText(getString(R.string.row4col1));\n        row5col1.setText(getString(R.string.row5col1));\n        row6col1.setText(getString(R.string.row6col1));\n        row7col1.setText(getString(R.string.row7col1));\n        row8col1.setText(getString(R.string.row8col1));\n    }\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n    }\n\n\n    @Override\n    public void onClickItem(String keyword) {\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bku/scrumsoftware/Fragment/PopUpDetailFragment.java	(revision 6aa6a96612a8a824a9f2832bc21656aa5a4bbdb6)
+++ app/src/main/java/com/bku/scrumsoftware/Fragment/PopUpDetailFragment.java	(date 1538278981056)
@@ -114,7 +114,8 @@
         super.onViewCreated(view, savedInstanceState);
         initRow1();
         switch (typeSprint) {
-            case "mon1":
+            case "Planning Topic 1":
+                row1col2.setText(getString(R.string.mon1_col2_row1));
                 break;
             default:
                 break;
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/codeStyles/Project.xml	(date 1538277367178)
+++ .idea/codeStyles/Project.xml	(date 1538277367178)
@@ -0,0 +1,29 @@
+<component name="ProjectCodeStyleConfiguration">
+  <code_scheme name="Project" version="173">
+    <Objective-C-extensions>
+      <file>
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Import" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Macro" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Typedef" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Enum" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Constant" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Global" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Struct" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="FunctionPredecl" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Function" />
+      </file>
+      <class>
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Property" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Synthesize" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InitMethod" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="StaticMethod" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InstanceMethod" />
+        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="DeallocMethod" />
+      </class>
+      <extensions>
+        <pair source="cpp" header="h" fileNamingConvention="NONE" />
+        <pair source="c" header="h" fileNamingConvention="NONE" />
+      </extensions>
+    </Objective-C-extensions>
+  </code_scheme>
+</component>
\ No newline at end of file
